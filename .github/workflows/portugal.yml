name: Run M3U Generator

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'  # Executa a cada hora (minuto 0 de cada hora)

jobs:
  generate_playlist:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true  # necessário para permitir commits

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        id: install_deps
        run: |
          python -m pip install --upgrade pip
          
          # 1. Extrai nomes de módulos de importações (excluindo 'import x as y' ou 'from x import y')
          #    e remove módulos padrões do Python (como 'os', 'sys', 'json', etc.)
          #    NOTA: O nome do módulo importado nem sempre é o nome do pacote PyPI.
          #    Ex: 'import bs4' (módulo) é 'pip install beautifulsoup4' (pacote).
          #    Para este caso, vamos assumir que o nome do módulo é o nome do pacote.
          
          # Lista de módulos que geralmente são pacotes PyPI e estavam no original
          # Esta lista deve ser ajustada se o seu script usar outros pacotes
          PACKAGES_TO_INSTALL="yt-dlp requests"

          # Tenta analisar o arquivo portugal.py para encontrar outros imports
          if [ -f portugal.py ]; then
            # Usa grep para encontrar linhas que começam com 'import '
            # e extrai o nome do módulo (primeira palavra após 'import ')
            # Filtra para remover módulos padrão que não precisam de pip install
            # Nota: Esta é uma heurística simples e pode falhar em casos complexos.
            
            # Lista de módulos padrão do Python que NÃO precisam ser instalados:
            STANDARD_MODULES="os|sys|json|re|time|datetime|pathlib|logging|collections|io|math|random|csv|sqlite3|threading|multiprocessing|argparse|socket|http|urllib|xml|html|ftplib|smtplib|poplib|imaplib|ssl|hashlib|base64|zlib|gzip|zipfile|tarfile"
            
            # Extrai imports, filtra módulos padrão e adiciona à lista
            ADDITIONAL_PACKAGES=$(grep -E '^\s*import\s+[a-zA-Z0-9_]+' portugal.py | \
                                 awk '{print $2}' | \
                                 sed 's/,//g' | \
                                 grep -vE "^($STANDARD_MODULES)$" | \
                                 tr '\n' ' ')
                                 
            PACKAGES_TO_INSTALL="$PACKAGES_TO_INSTALL $ADDITIONAL_PACKAGES"
            
            # Remove duplicatas e espaços extras
            PACKAGES_TO_INSTALL=$(echo $PACKAGES_TO_INSTALL | tr ' ' '\n' | sort -u | tr '\n' ' ')
            
            echo "Pacotes identificados para instalação: $PACKAGES_TO_INSTALL"
            
            if [ -n "$PACKAGES_TO_INSTALL" ]; then
              pip install $PACKAGES_TO_INSTALL
            else
              echo "Nenhum pacote PyPI não-padrão identificado para instalação."
            fi
          else
            echo "Arquivo portugal.py não encontrado. Instalando apenas yt-dlp e requests como fallback."
            pip install $PACKAGES_TO_INSTALL
          fi

      - name: Download cookies from secret URL
        run: |
          curl -L -o cookies.txt "${{ secrets.COOKIES_URL }}"

      - name: Run M3U playlist generator script
        run: |
          python portugal.py cookies.txt

      - name: Commit and push updated PLAYLIST.m3u
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          git add PLAYLIST.m3u
          
          if git diff --cached --quiet; then
            echo "Nenhuma mudança em PLAYLIST.m3u"
          else
            git commit -m "Atualiza PLAYLIST.m3u via GitHub Actions"
            git push
          fi
