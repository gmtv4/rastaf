name: Run M3U Generator

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'  # Executa a cada hora

jobs:
  generate_playlist:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies automatically
        id: install_deps
        run: |
          python -m pip install --upgrade pip

          # -----------------------------
          # Mapeamento de m√≥dulos -> pacotes PyPI
          # -----------------------------
          declare -A MODULE_TO_PACKAGE
          MODULE_TO_PACKAGE["bs4"]="beautifulsoup4"
          MODULE_TO_PACKAGE["yaml"]="PyYAML"
          MODULE_TO_PACKAGE["selenium"]="selenium"
          MODULE_TO_PACKAGE["requests"]="requests"
          MODULE_TO_PACKAGE["yt_dlp"]="yt-dlp"
          MODULE_TO_PACKAGE["cv2"]="opencv-python"
          MODULE_TO_PACKAGE["PIL"]="Pillow"

          # -----------------------------
          # Detecta automaticamente o arquivo Python principal
          # -----------------------------
          PY_FILE=$(ls *.py | head -n 1)
          echo "üìÑ Arquivo Python detectado: $PY_FILE"

          # -----------------------------
          # Detecta imports do arquivo
          # -----------------------------
          if [ -f "$PY_FILE" ]; then
            echo "üîç Detectando imports..."
            # Lista de m√≥dulos padr√£o do Python que n√£o precisam de instala√ß√£o
            STANDARD_MODULES="os|sys|json|re|time|datetime|pathlib|logging|collections|io|math|random|csv|sqlite3|threading|multiprocessing|argparse|socket|http|urllib|xml|html|ftplib|smtplib|poplib|imaplib|ssl|hashlib|base64|zlib|gzip|zipfile|tarfile|subprocess|tempfile|shutil|enum|typing|functools|contextlib|itertools|dataclasses|decimal|fractions|statistics"

            # Extrai os nomes ap√≥s 'import' e 'from'
            IMPORTS=$(grep -E '^\s*(import|from)\s+[a-zA-Z0-9_]+' "$PY_FILE" | \
                      sed -E 's/^\s*(import|from)\s+//' | \
                      awk '{print $1}' | \
                      sed 's/,//g' | \
                      sort -u | \
                      grep -vE "^($STANDARD_MODULES)$" || true)

            echo "üì¶ M√≥dulos detectados: $IMPORTS"

            # Traduz os m√≥dulos em pacotes PyPI (quando necess√°rio)
            FINAL_PACKAGES=""
            for module in $IMPORTS; do
              if [[ -n "${MODULE_TO_PACKAGE[$module]}" ]]; then
                FINAL_PACKAGES+="${MODULE_TO_PACKAGE[$module]} "
              else
                FINAL_PACKAGES+="$module "
              fi
            done

            # Remove duplicatas e espa√ßos extras
            FINAL_PACKAGES=$(echo "$FINAL_PACKAGES" | tr ' ' '\n' | sort -u | tr '\n' ' ')

            echo "üì¶ Pacotes PyPI finais para instala√ß√£o: $FINAL_PACKAGES"

            if [ -n "$FINAL_PACKAGES" ]; then
              pip install $FINAL_PACKAGES
            else
              echo "Nenhum pacote adicional necess√°rio."
            fi
          else
            echo "‚ùå Nenhum arquivo Python encontrado."
          fi

      - name: Download cookies from secret URL
        run: |
          curl -L -o cookies.txt "${{ secrets.COOKIES_URL }}"

      - name: Run M3U playlist generator script
        run: |
          PY_FILE=$(ls *.py | head -n 1)
          echo "üöÄ Executando script: $PY_FILE"
          python "$PY_FILE" cookies.txt

      - name: Commit and push updated PLAYLIST.m3u
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          git add PLAYLIST.m3u
          
          if git diff --cached --quiet; then
            echo "Nenhuma mudan√ßa em PLAYLIST.m3u"
          else
            git commit -m "Atualiza PLAYLIST.m3u via GitHub Actions"
            git push
          fi
